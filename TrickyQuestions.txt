// Tricky Question with Answers


1)  let a = 5
    let b = a++;
    console.log(a + b)
    O/P => 11 (due to postprefix operator a becomes 6 in second line)


2)  const a = 1<2<3; // true because (1<2 return true which is 1 again 1<3 will return true)
    const b = 3<2<1; // true (3<2 returns false == 0 and (0<1) == true  )
    console.log(a,b)


3)  const arr = [1,2,3]
    arr[5] = 99;
    console.log(arr) O/P =[1,2,3,undefined,undefined,99]
    console.log(arr.length) O/P = 5


4)  let str = 'jscafe'
    str[0] = 'c'
    console.log(str) O/P = 'jscafe' (because string is immutable we can change entire 
    string instead we cannot changed string value based on index)


5)  console.log(5<'15'<5) // true (due to type coresion 15 is converted to number(5<15)=1 and (1<5)=true)
    console.log(7<'15'<7) // true (due to type coresion 15 is converted to number(7<15)=1 and (1<5)=true)
    console.log(7<'85'>5) // false (due to type coresion 85 is converted to number(7<85)=1 and (1>5)=false)
